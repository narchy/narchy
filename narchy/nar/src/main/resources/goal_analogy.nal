//GOAL ANALOGIES
// TODO add negation forms

//1. IMPL=based
(P-->C), (A ==> (Q-->C)), neq(Q,P), task("!") |- (A ==>+- (P-->C)), (Punctuation:Question)
  (C-->P), (A ==> (C-->Q)), neq(Q,P), task("!") |- (A ==>+- (C-->P)), (Punctuation:Question)
     (P-->C), (A ==> (Q-->C)), neq(Q,P), task("!") |- (substDiff(A, Q, P) ==>+- (P-->C)), (Punctuation:Question)
        (P-->C), (A ==> (Q-->C)), neq(Q,P), task("!") |- substDiff(A, Q, P), (Punctuation:Quest)
(P-->C), ((Q-->C) ==> A), neq(Q,P), task("!") |- ((P-->C) ==>+- A), (Punctuation:Question)
  (C-->P), ((C-->Q) ==> A), neq(Q,P), task("!") |- ((C-->P) ==>+- A), (Punctuation:Question)
     (P-->C), ((Q-->C) ==> A), neq(Q,P), task("!") |- ((P-->C) ==>+- substDiff(A, Q, P)), (Punctuation:Question)
        (P-->C), ((Q-->C) ==> A), neq(Q,P), task("!") |- substDiff(A, Q, P), (Punctuation:Quest)


//2. CONJ-based
(P-->C), (A && (Q-->C)), neq(Q,P), task("!") |- (substDiff(A,Q,P) &&+- (P-->C)), (Punctuation:Quest)
    (P-->C), (A && --(Q-->C)), neq(Q,P), task("!") |- (substDiff(A,Q,P) &&+- --(P-->C)), (Punctuation:Quest)
(C-->P), (A && (C-->Q)), neq(Q,P), task("!") |- (substDiff(A,Q,P) &&+- (C-->P)), (Punctuation:Quest)
    (C-->P), (A && --(C-->Q)), neq(Q,P), task("!") |- (substDiff(A,Q,P) &&+- --(C-->P)), (Punctuation:Quest)
